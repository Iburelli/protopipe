General:
 model_type: 'classifier'
 # [...] = your analysis local full path OUTSIDE the Vagrant box
 data_dir: '[...]/data/TRAINING/for_particle_classification/'
 data_sig_file: 'TRAINING_classification_tail_gamma_merged.h5'
 data_bkg_file: 'TRAINING_classification_tail_proton_merged.h5'
 cam_id_list: ['LSTCam', 'NectarCam']
 table_name_template: '' # leave empty (TO BE REMOVED)
 outdir: '[...]/estimators/gamma_hadron_classifier'

Split:
 train_fraction: 0.8
 use_same_number_of_sig_and_bkg_for_training: False  # Lowest statistics will drive the split

Method:
 name: 'RandomForestClassifier'  # AdaBoostClassifier or RandomForestClassifier
 target_name: 'label'
 tuned_parameters:
  n_estimators: [200]
  max_depth: [10]  # null for None
  min_samples_split: [10]
  min_samples_leaf: [10]
 scoring: 'roc_auc'
 cv: 2
 use_proba: True  # If not output is score
 calibrate_output: False  # If true calibrate probability

FeatureList:
 - 'reco_energy'
 - 'reco_energy_tel'
 - 'hillas_width'
 - 'hillas_length'
 - 'hillas_skewness'
 - 'hillas_kurtosis'
 - 'h_max'
 - 'log10_impact'

SigFiducialCuts:
 - 'offset <= 0.5'
 - 'good_image == 1'
 - 'is_valid == True'

BkgFiducialCuts:
 - 'offset <= 1.'

Diagnostic:
 # Energy binning (used for reco and true energy)
 energy:
  nbins: 4
  min: 0.0125
  max: 200
